#!/bin/bash

# –£—Å—Ç–∞–Ω–≤–ª–∏–≤–∞–µ–º—ã–µ –ø–∞–∫–µ—Ç—ã —á–µ—Ä–µ–∑ pacman
pacman_packages=(
  alacritty 
  atril
  # bat			# clone cat
  baobab		# disk analyzer
  base-devel
  bitwarden
  brave-browser
  code
  docker
  docker-compose
  fd
  fzf
  geany
  git
  gitg
  gnome-disk-utility
  gthumb
  htop
  lazygit
  lf
  # libreoffice-still
  mate-calc
  mpv
  neofetch
  neovim
  npm
  obsidian
  # openoffice-bin 
  # pycharm-community-edition
  python
  python-mutagen
  python-pip
  # pyright
  # qbittorrent
  ranger
  scrot
  # sqlitebrowser
  stow
  telegram-desktop
  # torbrowser-launcher
  tree
  tmux
  ttf-jetbrains-mono-nerd
  unzip
  w3m			# for ranger
  wmctrl		# Control your EWMH compliant window manager from command line
  yt-dlp
  zed
  zip
  zsh
  # For NeoVim
  bottom
  gdu
  ripgrep
  tree-sitter-cli
)

# –£—Å—Ç–∞–Ω–≤–ª–∏–≤–∞–µ–º—ã–µ –ø–∞–∫–µ—Ç—ã —á–µ—Ä–µ–∑ yay (AUR)
aur_packages=(
  # anydesk-bin
  google-chrome
  jdownloader2
  input-remapper-git
  lazydocker
  # microsoft-edge-stable-bin
  # thonny
  xkb-switch
  yandex-browser
  yandex-disk
  # zoom
)

set -euo pipefail

# –§–∞–π–ª –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫
LOGFILE="install_errors.log"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞
error_exit() {
  echo "‚ùå –û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç—Ä–æ–∫–µ ${1:-"unknown"}. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ $LOGFILE"
  exit 1
}

# –õ–æ–≤–∏–º –ª—é–±—ã–µ –æ—à–∏–±–∫–∏ –∏ –≤—ã–∑—ã–≤–∞–µ–º error_exit
trap 'error_exit $LINENO' ERR

echo "========================================"
echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤ —á–µ—Ä–µ–∑ pacman..."
sudo pacman -S --needed --noconfirm "${pacman_packages[@]}" 2>> "$LOGFILE" || error_exit $LINENO

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ yay (AUR helper)
if ! command -v yay &> /dev/null; then
  echo "========================================"
  echo "yay –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é yay..."
  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã –¥–ª—è —Å–±–æ—Ä–∫–∏ yay
  sudo pacman -S --needed --noconfirm git base-devel 2>> "$LOGFILE" || error_exit $LINENO

  TMP_DIR=$(mktemp -d) || error_exit $LINENO
  git clone https://aur.archlinux.org/yay.git "$TMP_DIR/yay" 2>> "$LOGFILE" || error_exit $LINENO
  cd "$TMP_DIR/yay" || error_exit $LINENO
  makepkg -si --noconfirm 2>> "$LOGFILE" || error_exit $LINENO
  cd ~ || error_exit $LINENO
  rm -rf "$TMP_DIR" || error_exit $LINENO
else
  echo "========================================"
  echo "yay —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
fi

echo "========================================"
echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤ —á–µ—Ä–µ–∑ yay (AUR)..."
yay -Syu --noconfirm "${aur_packages[@]}" 2>> "$LOGFILE" || error_exit $LINENO
yay -S --needed --noconfirm "${aur_packages[@]}" 2>> "$LOGFILE" || error_exit $LINENO

echo "========================================"
echo "üéâ –í—Å–µ –ø–∞–∫–µ—Ç—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git –∏ SSH
echo "üîë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git –∏ SSH..."
git config --global user.name "Oleg Prikhodko"
git config --global user.email "4.oleg.pr@gmail.com"

SSH_KEY_PATH="$HOME/.ssh/id_rsa"

if [[ -f "$SSH_KEY_PATH" ]]; then
  echo "‚úÖ SSH-–∫–ª—é—á —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $SSH_KEY_PATH"
else
  ssh-keygen -t rsa -b 4096 -f "$SSH_KEY_PATH" -N ""
  echo "‚úÖ SSH-–∫–ª—é—á —Å–æ–∑–¥–∞–Ω: $SSH_KEY_PATH"
  echo "üìå –î–∞–ª–µ–µ –¥–æ–±–∞–≤—å—Ç–µ –∫–ª—é—á –≤ GitHub -> Settings -> SSH and GPG keys -> New SSH key"
  cat "$SSH_KEY_PATH.pub"
fi

echo "–î–∞–ª–µ–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ .ssh/id_rsa.pub –¥–æ–±–∞–≤–ª—è–µ–º –≤ GitHub -> Settings -> SSH and GPG keys -> New SSH key..."
echo "–î–∞–ª–µ–µ yandex-disk setup –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –¥–µ–º–æ–Ω... –∏ –û–°–¢–ê–ù–ê–í–õ–ò–í–ê–ï–ú –î–ï–ú–û–ù!!! path to dir: /home/Data/Yandex.Disk"
